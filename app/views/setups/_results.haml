.results#setups-results
  %header
    %h1#setups-results-title{tabindex: -1}<
      %span.badge= @setups.total_count
      Results
      %small
        =link_to request.url do
          %span.sr-only Link to these results
          %i.fa.fa-link.fa-fw

  = paginate @setups
  = search_form_for(@q, url: {controller: :setups, action: :results},  html: {multipart: true, class: 'form-vertical', remote: true}, format: 'js', wrapper: :vertical_form, wrapper_mappings: { check_boxes: :vertical_radio_and_checkboxes, radio_buttons: :vertical_radio_and_checkboxes}) do |f|

    %table.index-table.table-responsive
      %caption.sr-only Results table for setups
      %thead
        %tr
          %th{scope: "col"}<
            = sort_link @q, :platform_version_platform_title, 'Platform'
          %th{scope: "col"}<
            = sort_link @q, :assistive_technology_version_assistive_technology_title, 'Assistive Technology'
          %th{scope: "col"}<
            = sort_link @q, :browser_reader_version_browser_reader_title, 'Read with'
          %th{scope: "col"}<
            = sort_link @q, :file_format_title, 'File Format'
          %th{scope: "col"}<
            = sort_link @q, :renderer_title, 'Renderer'
          %th{scope: "col"}<
            = sort_link @q, :outputs_count, 'Outputs' #TODO improve perf
          %th{scope: "col"}<
            = sort_link @q, :status_title, 'Status'
          %th{scope: "col"}<
            Action
        %tr
          -#-if admin?
            -#%th<
          %th<
            = f.input  :platform_version_platform_id_eq, as: :select, include_blank: "Any platform", label: false, required: false,
              collection: @platforms.map{|e| [e.title, e.id, {data: {mappings: {assistive_technology_version_assistive_technology_id_eq: e.assistive_technologies.map{|a| a.id}.flatten, browser_reader_version_browser_reader_id_eq: e.browser_readers.map{|a| a.id}.flatten }}}]}
          %th<
            = f.input  :assistive_technology_version_assistive_technology_id_eq, as: :select, include_blank: "Any assistive technology", label: false, required: false,
              collection: @assistive_technologies.map{|e| [e.title, e.id, {data: {mappings: {browser_reader_version_browser_reader_id_eq: e.browser_readers.map{|a| a.id}.flatten, platform_version_platform_id_eq: e.platforms.map{|a| a.id}.flatten }}}]}
          %th<
            = f.input  :browser_reader_version_browser_reader_id_eq, as: :select, include_blank: "Any reader", label: false, required: false,
              collection: @browser_readers.map{|e| [e.title, e.id, {data: {mappings: {assistive_technology_version_assistive_technology_id_eq: e.assistive_technologies.map{|a| a.id}.flatten, file_format_id_eq: e.file_formats.map{|a| a.id}.flatten, renderer_id_eq: e.renderers.map{|a| a.id}.flatten, platform_version_platform_id_eq: e.platforms.map{|a| a.id}.flatten }}}]}
          %th<
            = f.input  :file_format_id_eq, as: :select, include_blank: "Any file format", label: false, required: false,
              collection: @file_formats.map{|e| [e.title, e.id, {data: {mappings: {browser_reader_version_browser_reader_id_eq: e.browser_readers.map{|a| a.id}.flatten}}}]}
          %th<
            = f.input  :renderer_id_eq, as: :select, include_blank: "Any renderer", label: false, required: false,
              collection: @renderers.map{|e| [e.title, e.id, {data: {mappings: {browser_reader_version_browser_reader_id_eq: e.browser_readers.map{|a| a.id}.flatten}}}]}
          %th<
            = f.input  :outputs_id_eq, as: :select, include_blank: "Any outputs", label: false, required: false,
              collection: @outputs
          %th<
            = f.input  :workflow_status_id_eq, as: :select, include_blank: "Any status", label: false, required: false,
              collection: @workflow_status
          %td<
            .btn-group
              - disable_with = "<i id='disable-me' class='fa fa-spinner fa-spin fa-fw'></i>"
              = button_tag type: "submit", class: "btn btn-success btn-sm", data: {disable_with: disable_with} do
                %span.sr-only Search
                %i.fa.fa-fw.fa-search
              = link_to results_setups_path(search_cancel: true), role: "button", class: 'btn btn-danger btn-sm' do
                %span.sr-only Clear
                %i.fa.fa-fw.fa-close


      %tbody
        - @setups.to_a.uniq.each_with_index do |setup, idx|
          -klass = "item "
          -klass += setup.workflow_status.css_class
          %tr{class: klass}
            -#-if admin?
              -#%td= setup.id
            %td= setup.platform_version
            %td= setup.assistive_technology_version
            %td= setup.browser_reader_version
            %td= setup.file_format
            %td= setup.renderer
            %td
              -setup.outputs.uniq.each do |a|
                #{a}
                %br
            %td
              %p.text-center
                = raw setup.workflow_status.label
              %p.text-center
                %small.text-center
                  On
                  %time= setup.updated_at.strftime("%a, %d %b %Y")
            %td
              =link_to setup_path(setup), class: 'btn btn-primary' do
                Details

  - if  @setups.count == 0
    %h3
      There are no supported results for your search.  Please try changing your parameters.  If you still canâ€™t find the setup you need, <a href="mailto:math-support-matrix@seeread.info">email support</a> to request it or learn more.
